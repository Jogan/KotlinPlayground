allprojects {
    repositories {
        google()
        jcenter()
    }
}

ext {
    //Android
    androidBuildToolsVersion = "27.0.3"
    androidMinSdkVersion = 21
    androidTargetSdkVersion = 27
    androidCompileSdkVersion = 27

    //Plugins
    ktLintVersion = '0.14.0'
    rxLintVersion = '1.6'

    //Libraries
    kotlinVersion = '1.2.10'
    rxKotlinVersion = '2.2.0'
    rxAndroidVersion = '2.0.1'
    javaxAnnotationVersion = '1.0'
    javaxInjectVersion = '1'
    moshiVersion = '1.5.0'
    okHttpVersion = '3.9.1'
    retrofitVersion = '2.3.0'
    archComponentsVersion = '1.0.0'
    archComponentsPagingVersion = '1.0.0-alpha4-1'
    constraintLayoutVersion = '1.1.0-beta4'
    supportLibraryVersion = '27.0.2'
    groupieVersion = '2.0.0'
    timberVersion = '4.6.0'
    glideVersion = '4.4.0'
    daggerVersion = '2.14.1'
    glassfishAnnotationVersion = '10.0-b28'
    leakCanaryVersion = '1.5.4'

    //Testing
    robolectricVersion = '3.4.2'
    jUnitVersion = '4.12'
    assertJVersion = '3.8.0'
    mockitoVersion = '1.9.5'
    dexmakerVersion = '1.0'
    espressoVersion = '3.0.1'
    testingSupportLibVersion = '0.1'
    mockitoKotlinVersion = '1.5.0'
    mockitoAndroidVersion = '2.8.47'
    androidSupportRunnerVersion = '1.0.0'
    androidSupportRulesVersion = '1.0.0'
    dexmakerMockitoversion = '2.2.0'
    runnerVersion = '0.5'

    domainDependencies = [
            javaxAnnotation: "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject    : "javax.inject:javax.inject:${javaxInjectVersion}",
            rxKotlin       : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin         : "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}"
    ]

    domainTestDependencies = [
            junit  : "junit:junit:${jUnitVersion}",
            mockito: "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            assertj: "org.assertj:assertj-core:${assertJVersion}"
    ]

    presentationDependencies = [
            daggerCompiler    : "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger            : "com.google.dagger:dagger:${daggerVersion}",
            okHttp            : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogger      : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            moshi             : "com.squareup.moshi:moshi:${moshiVersion}",
            rxKotlin          : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin            : "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}",
            rxAndroid         : "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            javaxAnnotation   : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject       : "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${supportLibraryVersion}",
            retrofit          : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitConverter : "com.squareup.retrofit2:converter-moshi:${retrofitVersion}",
            retrofitAdapter   : "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",
            archRuntime       : "android.arch.lifecycle:runtime:${archComponentsVersion}",
            archExtensions    : "android.arch.lifecycle:extensions:${archComponentsVersion}",
            archCompiler      : "android.arch.lifecycle:compiler:${archComponentsVersion}",
    ]

    presentationTestDependencies = [
            junit      : "junit:junit:${jUnitVersion}",
            kotlinJUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
            assertj    : "org.assertj:assertj-core:${assertJVersion}",
            mockito    : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric: "org.robolectric:robolectric:${robolectricVersion}"
    ]

    dataDependencies = [
            daggerCompiler    : "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger            : "com.google.dagger:dagger:${daggerVersion}",
            okHttp            : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogger      : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            moshi             : "com.squareup.moshi:moshi:${moshiVersion}",
            rxKotlin          : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin            : "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}",
            rxAndroid         : "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            javaxAnnotation   : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject       : "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${supportLibraryVersion}",
            retrofit          : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitConverter : "com.squareup.retrofit2:converter-moshi:${retrofitVersion}",
            retrofitAdapter   : "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    ]

    dataTestDependencies = [
            junit      : "junit:junit:${jUnitVersion}",
            kotlinJUnit: "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
            assertj    : "org.assertj:assertj-core:${assertJVersion}",
            mockito    : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric: "org.robolectric:robolectric:${robolectricVersion}"
    ]

    cacheDependencies = [
            daggerCompiler    : "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger            : "com.google.dagger:dagger:${daggerVersion}",
            moshi             : "com.squareup.moshi:moshi:${moshiVersion}",
            rxKotlin          : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin            : "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}",
            javaxAnnotation   : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject       : "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${supportLibraryVersion}",
            roomRuntime       : "android.arch.persistence.room:runtime:${archComponentsVersion}",
            roomCompiler      : "android.arch.persistence.room:compiler:${archComponentsVersion}",
            roomRxJava        : "android.arch.persistence.room:rxjava2:${archComponentsVersion}"
    ]

    cacheTestDependencies = [
            junit        : "junit:junit:${jUnitVersion}",
            kotlinJUnit  : "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
            assertj      : "org.assertj:assertj-core:${assertJVersion}",
            mockito      : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric  : "org.robolectric:robolectric:${robolectricVersion}",
            roomTesting  : "android.arch.persistence.room:testing:${archComponentsVersion}",
            archTesting  : "android.arch.core:core-testing:${archComponentsVersion}",
            supportRunner: "com.android.support.test:runner:${androidSupportRunnerVersion}",
            supportRules : "com.android.support.test:rules:${androidSupportRulesVersion}"
    ]

    remoteDependencies = [
            daggerCompiler    : "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger            : "com.google.dagger:dagger:${daggerVersion}",
            moshi             : "com.squareup.moshi:moshi:${moshiVersion}",
            rxKotlin          : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin            : "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}",
            javaxAnnotation   : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject       : "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${supportLibraryVersion}",
            okHttp            : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogger      : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            retrofit          : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitConverter : "com.squareup.retrofit2:converter-moshi:${retrofitVersion}",
            retrofitAdapter   : "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    ]

    remoteTestDependencies = [
            junit        : "junit:junit:${jUnitVersion}",
            kotlinJUnit  : "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
            assertj      : "org.assertj:assertj-core:${assertJVersion}",
            mockito      : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            supportRunner: "com.android.support.test:runner:${androidSupportRunnerVersion}",
            supportRules : "com.android.support.test:rules:${androidSupportRulesVersion}"
    ]

    mobileUiDependencies = [
            daggerCompiler     : "com.google.dagger:dagger-compiler:${daggerVersion}",
            daggerAndroid      : "com.google.dagger:dagger-android:${daggerVersion}",
            daggerSupport      : "com.google.dagger:dagger-android-support:${daggerVersion}",
            daggerProcessor    : "com.google.dagger:dagger-android-processor:${daggerVersion}",
            rxKotlin           : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            rxAndroid          : "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            glide              : "com.github.bumptech.glide:glide:${glideVersion}",
            kotlin             : "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}",
            javaxAnnotation    : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject        : "javax.inject:javax.inject:${javaxInjectVersion}",
            supportAnnotations : "com.android.support:support-annotations:${supportLibraryVersion}",
            supportAppCompatV7 : "com.android.support:appcompat-v7:${supportLibraryVersion}",
            supportRecyclerView: "com.android.support:recyclerview-v7:${supportLibraryVersion}",
            supportDesign      : "com.android.support:design:${supportLibraryVersion}",
            supportConstraint  : "com.android.support.constraint:constraint-layout:${constraintLayoutVersion}",
            groupie            : "com.xwray:groupie:${groupieVersion}",
            timber             : "com.jakewharton.timber:timber:${timberVersion}",
            glassfishAnnotation: "org.glassfish:javax.annotation:${glassfishAnnotationVersion}",
            roomRuntime        : "android.arch.persistence.room:runtime:${archComponentsVersion}",
            roomCompiler       : "android.arch.persistence.room:compiler:${archComponentsVersion}",
            roomRxJava         : "android.arch.persistence.room:rxjava2:${archComponentsVersion}",
            archExtensions     : "android.arch.lifecycle:extensions:${archComponentsVersion}",
            archRxExtensions   : "android.arch.lifecycle:reactivestreams:${archComponentsVersion}",
            archCompiler       : "android.arch.lifecycle:compiler:${archComponentsVersion}",
            archPaging         : "android.arch.paging:runtime:${archComponentsPagingVersion}",
            mockito            : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            rxLint             : "nl.littlerobots.rxlint:rxlint:${rxLintVersion}",
            leakCanary         : "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}",
            leakCanaryNoOp     : "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}"
    ]

    mobileUiTestDependencies = [
            junit          : "junit:junit:${jUnitVersion}",
            kotlinJUnit    : "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
            assertj        : "org.assertj:assertj-core:${assertJVersion}",
            mockito        : "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            supportRunner  : "com.android.support.test:runner:${androidSupportRunnerVersion}",
            supportRules   : "com.android.support.test:rules:${androidSupportRulesVersion}",
            mockitoAndroid : "org.mockito:mockito-android:${mockitoAndroidVersion}",
            espressoCore   : "com.android.support.test.espresso:espresso-core:${espressoVersion}",
            espressoIntents: "com.android.support.test.espresso:espresso-intents:${espressoVersion}",
            espressoContrib: "com.android.support.test.espresso:espresso-contrib:${espressoVersion}",
            androidRunner  : "com.android.support.test:runner:${runnerVersion}",
            androidRules   : "com.android.support.test:rules:${runnerVersion}"
    ]

}